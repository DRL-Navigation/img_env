#! /usr/bin/env python

PACKAGE='collvoid_local_planner'
#import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *


gen = ParameterGenerator()
#vel_constraints = gen.add_group("Movement Constraints")
#Name    Type   Reconfiguration level     Description        Default    Min   Max

gen.add("orca", bool_t, 0, "Use Orca instead of VOs", False)
gen.add("convex", bool_t, 0, "Use Footprint instead of Circumscribed radius", False)
gen.add("clearpath", bool_t, 0, "Use clearpath instead of sampling based", False)
gen.add("use_truncation", bool_t, 0, "Truncate VOs", True)
gen.add("num_samples", int_t, 0, "NUmber of Samples", 400, 1, 1000)

VO_enum = gen.enum([gen.const("VOs", int_t, 2, "Use velocity Obstacles"),
                    gen.const("RVOs", int_t, 1, "Use reciprocal velocity Obstacles"),
                    gen.const("HRVOs", int_t, 0, "Use hybrid reciprocal velocity Obstacles")], "Set the VO type")

gen.add("type_vo", int_t, 0, "Set the VO type", 0, 0, 2, edit_method=VO_enum)


gen.add("acc_lim_x", double_t, 0,"Max acceleration in x", 1.0, 0.0, 20.0)
gen.add("acc_lim_y", double_t, 0,"Max acceleration in y", 1.0, 0.0, 20.0)
gen.add("acc_lim_th", double_t, 0,"Max acceleration in th", 1.5, 0.0, 20.0)
gen.add("max_vel_with_obstacles", double_t, 0,"Max velocity when obstacles are present", 1.0, 0.0, 5.0)
gen.add("max_vel_x", double_t, 0,"Max velocity in x", 1.0, 0.0, 5.0)
gen.add("min_vel_x", double_t, 0,"Min velocity in x", 0.05, 0.0, 5.0)
gen.add("max_vel_y", double_t, 0,"Max velocity in y", 0.2, 0.0, 5.0)
gen.add("min_vel_y", double_t, 0,"Min velocity in y", 0.05, 0.0, 5.0)

gen.add("max_vel_th", double_t, 0,"Max velocity in th", 1.5, 0.0, 15.0)
gen.add("min_vel_th", double_t, 0,"Min velocity in th", 0.1, 0.0, 15.0)
gen.add("min_vel_th_inplace", double_t, 0,"Min velocity in th when rotating inplace", 0.05, 0.0, 5.0)
gen.add("footprint_radius", double_t, 0, "Circumscribed radius", 0.45, 0.0, 2.0)

gen.add("eps", double_t, 0, "AMCL epsilon", 0.1, 0.0, 1.0)

gen.add("time_horizon_obst", double_t, 0, "How long to stay collision free from obst", 10.0, 0, 100)

#diff = gen.add_group("Settings for Diff drive")
gen.add("time_to_holo", double_t, 0, "In how much time I want to be on the ", 0.4, 0, 1)
gen.add("min_error_holo", double_t, 0, "How much error do I allow minimally", 0.01, 0, 1)
gen.add("max_error_holo", double_t, 0, "How much error do I allow maximally", 0.15, 0, 1)
gen.add("delete_observations", bool_t, 0, "Delete observations from costmap", True);
gen.add("threshold_last_seen", double_t, 0, "How long to take msg into account", 0.5, 0, 100)

gen.add("trunc_time", double_t, 0, "Truncation of Velocity Obstacles", 5.0, 0, 100)
gen.add("left_pref", double_t, 0, "Preference to avoid left", 0.1, -5.0, 5.0)

gen.add("publish_me_frequency", double_t, 0, "publish me position frequency", 10, 1, 100);
gen.add("publish_positions_frequency", double_t, 0, "publish positions frequency", 10, 1, 100);



gen.add("restore_defaults", bool_t, 0, "Restore to the original configuration", False)

exit(gen.generate(PACKAGE, "collvoid_reconfigure_node", "Collvoid"))
